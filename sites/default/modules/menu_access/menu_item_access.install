<?php 
// $Id: menu_item_access.install,v 1.1 2009/03/25 17:18:16 emptyvoid Exp $
/** 
  * @file menua_item_access.install
  * This file provides the install and uninstall for the menu item access database schema.
  */

/**
  * Implementation of hook_install().
  */
function menu_item_access_install() {
  drupal_install_schema('menu_item_access');
  // create default settings for menu item access
  
  variable_set('menu_item_access_settings', array('per_menu_item' => '1', 'priority' => '10', 'view' => array('1', '2'), 'update' => array('2'), 'delete' => array('2')));
  //'view' => 'anonymous user; authenticated user', 
  
  //$t = get_t();
  //db_query("INSERT INTO {menu_custom} (menu_name, title, description) VALUES ('%s', '%s', '%s')", 'navigation', $t('Navigation'), $t('The navigation menu is provided by Drupal and is the main interactive menu for any site. It is usually the only menu that contains personalized links for authenticated users, and is often not even visible to anonymous users.'));
  
  menu_rebuild();
}

/**
  * Implementation of hook_schema().
  */
function menu_item_access_schema() {
  
  $schema['menu_item_access_role'] = array(
    'fields' => array(
         'mlid' => array('type' => 'int', 'not null' => TRUE, 'default' => 0, 'disp-width' => '11', 'description' => t('The menu item identification number.')),
         'rid' => array('type' => 'int', 'not null' => TRUE, 'default' => 0, 'disp-width' => '11', 'description' => t('The role identification number.')),
         'realm' => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => '', 'description' => t('The security realm.')),
         'grant_view' => array('type' => 'int', 'size' => 'tiny', 'not null' => TRUE, 'default' => 0, 'disp-width' => '1', 'description' => t('Determines if the role has view access.')),
         'grant_update' => array('type' => 'int', 'size' => 'tiny', 'not null' => TRUE, 'default' => 0, 'disp-width' => '1', 'description' => t('Determines if the role has create and edit access.')),
         'grant_delete' => array('type' => 'int', 'size' => 'tiny', 'not null' => TRUE, 'default' => 0, 'disp-width' => '1',  'description' => t('Determines if the role has delete access.'))
      ),
    'primary key' => array('mlid', 'rid', 'realm'),
    'description' => t('the role table for menu item access.'),
  );

  $schema['menu_item_access_user'] = array(
    'fields' => array(
         'mlid' => array('type' => 'int', 'not null' => TRUE, 'default' => 0, 'disp-width' => '11', 'description' => t('The menu item identification number.')),
         'uid' => array('type' => 'int', 'not null' => TRUE, 'default' => 0, 'disp-width' => '11', 'description' => t('The user identification number.')),
         'realm' => array('type' => 'varchar', 'length' => '255', 'not null' => TRUE, 'default' => '', 'description' => t('The security realm.')),
         'grant_view' => array('type' => 'int', 'size' => 'tiny', 'not null' => TRUE, 'default' => 0, 'disp-width' => '1', 'description' => t('Determines if the user has view access.')),
         'grant_update' => array('type' => 'int', 'size' => 'tiny', 'not null' => TRUE, 'default' => 0, 'disp-width' => '1', 'description' => t('Determines if the user has create and edit access.')),
         'grant_delete' => array('type' => 'int', 'size' => 'tiny', 'not null' => TRUE, 'default' => 0, 'disp-width' => '1',  'description' => t('Determines if the user has delete access.'))
      ),
    'primary key' => array('mlid', 'uid', 'realm'),
    'description' => t('the user table for menu item access.'),
  );

  return $schema;
}


/*
 * Implementation of hook_uninstall()
 */
function menu_item_access_uninstall() {
  drupal_uninstall_schema('menu_item_access');
  variable_del('menu_item_access_settings');
  menu_rebuild();
}

